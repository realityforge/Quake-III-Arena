load("@com_github_ash2k_bazel_tools//multirun:def.bzl", "multirun")

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
load(":material_magic_golden_test.bzl", "material_magic_golden_test")

material_magic_golden_test(
    name = "t1",
    materials = [
        "textures/base/myBase",
        "textures/base/myBase2",
        "textures/base/myBase_3",
        "textures/base/myBase_4",
        "textures/base/myBase_5",
        "textures/base/myBase6",
        "textures/base/myBase7",
        "textures/base/myBase8",
        "textures/base/projectionShadow",
        "textures/base/moveypipe",
        "textures/base/waveywater",
        "models/mapobjects/bat/bat",
    ],
)

material_magic_golden_test(
    name = "t2",
    inputs = [
        "textures/base/myBase.shader",
        "textures/base/myBase2.shader",
    ],
    materials = [
        "textures/base/myBase",
        "textures/base/myBase2",
    ],
)

material_magic_golden_test(
    name = "material_name",
    materials = [
        "textures/simple",
        "textures/quoted_name",
        "projectionShadow",
    ],
)

material_magic_golden_test(
    name = "skyparms",
    materials = [
        "textures/sky1",
        "textures/sky2",
        "textures/sky3",
        "textures/sky4",
        "textures/sky5",
    ],
)

material_magic_golden_test(
    name = "stage_alphafunc",
    materials = [
        "textures/gt0",
        "textures/lt128",
        "textures/ge128",
    ],
)

material_magic_golden_test(
    name = "stage_animmap",
    materials = [
        "textures/anim1",
        "textures/anim2",
        "textures/anim3",
        "textures/anim4",
        "textures/anim5",
        "textures/anim6",
        "textures/anim7",
        "textures/anim8",
    ],
)

material_magic_golden_test(
    name = "stage_clampmap",
    materials = ["textures/image"],
)

material_magic_golden_test(
    name = "stage_depthfunc",
    materials = [
        "textures/all_caps_equal",
        "textures/equal",
        "textures/lequal",
    ],
)

material_magic_golden_test(
    name = "stage_depthwrite",
    materials = ["textures/mydepthwrite"],
)

material_magic_golden_test(
    name = "stage_detail",
    materials = ["textures/mydetail"],
)

material_magic_golden_test(
    name = "stage_map",
    materials = [
        "textures/white",
        "textures/image",
    ],
)

material_magic_golden_test(
    name = "stage_videomap",
    materials = ["textures/video"],
)

material_magic_golden_test(
    name = "surfaceparm",
    materials = ["textures/surfaceparm"],
)

# Runs all the update_goldens targets
multirun(
    name = "update_goldens",
    commands = [
        ":t1_update_goldens",
        ":t2_update_goldens",
        ":material_name_update_goldens",
        ":skyparms_update_goldens",
        ":stage_alphafunc_update_goldens",
        ":stage_animmap_update_goldens",
        ":stage_clampmap_update_goldens",
        ":stage_depthfunc_update_goldens",
        ":stage_depthwrite_update_goldens",
        ":stage_detail_update_goldens",
        ":stage_map_update_goldens",
        ":stage_videomap_update_goldens",
        ":surfaceparm_update_goldens",
    ],
    jobs = 0,
    stop_on_error = False,
)
