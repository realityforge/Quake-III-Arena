# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@gla//:rules.bzl", "gla_lib")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("//build_defs:rules.bzl", "CLIENT_GAME_DEFINES", "FULL_WARNINGS")

cc_library(
    name = "api",
    hdrs = [
        "tr_public.h",
        "tr_types.h",
    ],
    copts = FULL_WARNINGS,
    visibility = [
        "//code/cgame:__pkg__",
        "//code/client:__pkg__",
        "//code/q3_ui:__pkg__",
        "//code/sdl:__pkg__",
        "//code/ui:__pkg__",
    ],
)

cc_library(
    name = "internal_api",
    hdrs = [
        "iqm.h",
        "tr_common.h",
    ],
    copts = FULL_WARNINGS,
    visibility = [
        "//code/sdl:__pkg__",
    ],
    deps = [
        ":api",
        ":gla",
    ],
)

cc_library(
    name = "imagelib",
    srcs = [
        "tr_image_2.c",
        "tr_image_jpg.c",
        "tr_image_jpg2.c",
        "tr_image_png.c",
    ],
    hdrs = ["tr_image.h"],
    copts = FULL_WARNINGS,
    defines = CLIENT_GAME_DEFINES,
    includes = ["."],
    deps = [
        ":api",
        ":internal_api",
        "//code/qcommon:base",
        "//code/qcommon:shared_api",
        "@libjpeg_turbo//:jpeg",
        "@libspng",
    ],
)

cc_library(
    name = "renderer_common",
    srcs = [
        "tr_font.c",
        "tr_noise.c",
    ],
    copts = FULL_WARNINGS,
    visibility = ["//code/sdl:__pkg__"],
    deps = [
        ":api",
        ":imagelib",
        ":internal_api",
        "//code/qcommon:shared_api",
    ],
)

cc_library(
    name = "local",
    hdrs = [
        "tr_extramath.h",
        "tr_extratypes.h",
        "tr_fbo.h",
        "tr_local.h",
        "tr_postprocess.h",
    ],
    includes = ["."],
)

cc_library(
    name = "renderer",
    srcs = [
        "tr_animation.c",
        "tr_backend.c",
        "tr_bsp.c",
        "tr_cmds.c",
        "tr_curve.c",
        "tr_dsa.c",
        "tr_dsa.h",
        "tr_extensions.c",
        "tr_extramath.c",
        "tr_fbo.c",
        "tr_flares.c",
        "tr_glsl.c",
        "tr_image.c",
        "tr_image_dds.c",
        "tr_init.c",
        "tr_light.c",
        "tr_main.c",
        "tr_marks.c",
        "tr_mesh.c",
        "tr_model.c",
        "tr_model_iqm.c",
        "tr_postprocess.c",
        "tr_scene.c",
        "tr_shade.c",
        "tr_shade_calc.c",
        "tr_shader.c",
        "tr_shadows.c",
        "tr_sky.c",
        "tr_surface.c",
        "tr_vbo.c",
        "tr_world.c",
    ],
    includes = ["."],
    visibility = ["//code/client:__pkg__"],
    deps = [
        ":local",
        ":renderer_common",
        "//code/qcommon",
        "//code/qcommon:qfiles",
        "//code/renderer/glsl",
        "//third_party/json",
    ],
)

cc_library(
    name = "tr_subs",
    srcs = ["tr_subs.c"],
    includes = ["."],
    deps = [
        ":local",
        ":renderer",
        "//code/qcommon",
        "//code/qcommon:qfiles",
    ],
)

gla_lib(
    name = "gla",
    extensions = [
        "GL_ARB_framebuffer_object",
        "GL_ARB_depth_clamp",
        "GL_ARB_seamless_cube_map",
        "GL_NVX_gpu_memory_info",
        "GL_ATI_meminfo",
        "GL_ARB_texture_compression_rgtc",
        "GL_ARB_texture_compression_bptc",
        "GL_EXT_texture_compression_s3tc",
        "GL_EXT_texture_filter_anisotropic",
        "GL_EXT_texture_sRGB",
        "GL_S3_s3tc",
    ],
    header_only = False,
    maximum_profile = "3.2",
    minimum_profile = "3.0",
)
