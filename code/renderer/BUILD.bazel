# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@gla//:rules.bzl", "gla_lib")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("//build_defs:rules.bzl", "FULL_WARNINGS")

LIBRARY_COPTS = FULL_WARNINGS + [
    "-Wno-padded",
    "-Wno-cast-align",
    "-Wno-sign-conversion",
    "-Wno-double-promotion",
    "-Wno-float-equal",
    "-Wno-shorten-64-to-32",
    "-Wno-float-conversion",
    "-Wno-implicit-float-conversion",
    "-Wno-implicit-int-conversion",
    "-Wno-sign-compare",
    "-Wno-switch-enum",
    "-Wno-covered-switch-default",
    "-Wno-assign-enum",
    "-Wno-null-pointer-arithmetic",
    "-Wno-shadow",
    "-Wno-cast-qual",
    "-Wno-bad-function-cast",
]

DEPS = [
    ":api",
    ":local_api",
    ":gla",
    "//code/qcommon:qcommon",
    "//code/qcommon:shared_api",
]

cc_library(
    name = "api",
    hdrs = [
        "tr_public.h",
        "tr_types.h",
    ],
    copts = FULL_WARNINGS,
    visibility = [
        "//code/cgame:__pkg__",
        "//code/client:__pkg__",
        "//code/q3_ui:__pkg__",
        "//code/sdl:__pkg__",
        "//code/ui:__pkg__",
    ],
)

cc_library(
    name = "internal_api",
    hdrs = ["tr_common.h"],
    copts = FULL_WARNINGS,
    visibility = ["//code/sdl:__pkg__"],
    deps = [
        ":api",
        ":gla",
    ],
)

config_setting(
    name = "debug_compilation_mode",
    values = {"compilation_mode": "dbg"},
)

gla_lib(
    name = "gla",
    copts = FULL_WARNINGS + ["-Wno-padded"],
    defines = select({
        ":debug_compilation_mode": ["GLA_SUPPORT_AUTO_CHECK_ERROR_HANDLER"],
        "//conditions:default": [],
    }),
    extensions = [
        "GL_ARB_framebuffer_object",
        "GL_ARB_depth_clamp",
        "GL_ARB_seamless_cube_map",
        "GL_NVX_gpu_memory_info",
        "GL_ATI_meminfo",
        "GL_ARB_texture_compression_rgtc",
        "GL_ARB_texture_compression_bptc",
        "GL_EXT_texture_compression_s3tc",
        "GL_EXT_texture_filter_anisotropic",
        "GL_EXT_texture_sRGB",
        "GL_S3_s3tc",
    ],
    header_only = False,
    maximum_profile = "3.2",
    minimum_profile = "3.0",
)

cc_library(
    name = "local_api",
    hdrs = [
        "tr_dsa.h",
        "tr_extramath.h",
        "tr_extratypes.h",
        "tr_fbo.h",
        "tr_image.h",
        "tr_local.h",
        "tr_postprocess.h",
    ],
    copts = FULL_WARNINGS,
    includes = ["."],
    deps = [
        ":api",
        ":internal_api",
    ],
)

cc_library(
    name = "tr_backend",
    srcs = ["tr_backend.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_bsp",
    srcs = ["tr_bsp.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS + ["//third_party/json"],
)

cc_library(
    name = "tr_cmds",
    srcs = ["tr_cmds.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_curve",
    srcs = ["tr_curve.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_dsa",
    srcs = ["tr_dsa.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_extensions",
    srcs = ["tr_extensions.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_extramath",
    srcs = ["tr_extramath.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_fbo",
    srcs = ["tr_fbo.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_flares",
    srcs = ["tr_flares.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_font",
    srcs = ["tr_font.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_glsl",
    srcs = ["tr_glsl.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS + ["//code/renderer/glsl"],
)

cc_library(
    name = "tr_image",
    srcs = ["tr_image.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_image_2",
    srcs = ["tr_image_2.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_image_dds",
    srcs = ["tr_image_dds.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_image_jpg",
    srcs = ["tr_image_jpg.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS + ["@libjpeg_turbo//:jpeg"],
)

cc_library(
    name = "tr_image_jpg2",
    srcs = ["tr_image_jpg2.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS + ["@libjpeg_turbo//:jpeg"],
)

cc_library(
    name = "tr_image_png",
    srcs = ["tr_image_png.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS + ["@libspng"],
)

cc_library(
    name = "tr_init",
    srcs = ["tr_init.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_light",
    srcs = ["tr_light.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_main",
    srcs = ["tr_main.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_marks",
    srcs = ["tr_marks.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_mesh",
    srcs = ["tr_mesh.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_model",
    srcs = ["tr_model.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_noise",
    srcs = ["tr_noise.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_postprocess",
    srcs = ["tr_postprocess.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_scene",
    srcs = ["tr_scene.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_shade",
    srcs = ["tr_shade.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_shade_calc",
    srcs = ["tr_shade_calc.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_shader",
    srcs = ["tr_shader.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_shadows",
    srcs = ["tr_shadows.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_sky",
    srcs = ["tr_sky.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_surface",
    srcs = ["tr_surface.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_vbo",
    srcs = ["tr_vbo.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "tr_world",
    srcs = ["tr_world.c"],
    copts = LIBRARY_COPTS,
    deps = DEPS,
)

cc_library(
    name = "renderer",
    copts = LIBRARY_COPTS,
    visibility = ["//code/client:__pkg__"],
    deps = [
        ":tr_backend",
        ":tr_bsp",
        ":tr_cmds",
        ":tr_curve",
        ":tr_dsa",
        ":tr_extensions",
        ":tr_extramath",
        ":tr_fbo",
        ":tr_flares",
        ":tr_font",
        ":tr_glsl",
        ":tr_image",
        ":tr_image_2",
        ":tr_image_dds",
        ":tr_image_jpg",
        ":tr_image_jpg2",
        ":tr_image_png",
        ":tr_init",
        ":tr_light",
        ":tr_main",
        ":tr_marks",
        ":tr_mesh",
        ":tr_model",
        ":tr_noise",
        ":tr_postprocess",
        ":tr_scene",
        ":tr_shade",
        ":tr_shade_calc",
        ":tr_shader",
        ":tr_shadows",
        ":tr_sky",
        ":tr_surface",
        ":tr_vbo",
        ":tr_world",
    ],
)
