load("@rules_cc//cc:defs.bzl", "cc_import", "cc_library")

config_setting(
    name = "windows_x86_64",
    constraint_values = [
        "@platforms//os:windows",
        "@platforms//cpu:x86_64",
    ],
    visibility = ["//visibility:public"],
)

# Should we even bother supporting 32 bit windows? (or 32-bit anything?)
config_setting(
    name = "windows_x86_32",
    constraint_values = [
        "@platforms//os:windows",
        "@platforms//cpu:x86_32",
    ],
    visibility = ["//visibility:public"],
)

cc_import(
    name = "sdl_library",
    shared_library = select({
        "@platforms//os:macos": "libs/macosx/libSDL2-2.0.0.dylib",
        ":windows_x86_32": "libs/win32/SDL2.dll",
        ":windows_x86_64": "libs/win64/SDL264.dll",
    }),
    static_library = select({
        "@platforms//os:macos": "libs/macosx/libSDL2-2.0.0.a",
        ":windows_x86_32": "libs/win32/libSDL2main.a",
        ":windows_x86_64": "libs/win64/libSDL264main.a",
    }),
)

cc_library(
    name = "sdl",
    hdrs = [
        "include/SDL.h",
        "include/SDL_assert.h",
        "include/SDL_atomic.h",
        "include/SDL_audio.h",
        "include/SDL_bits.h",
        "include/SDL_blendmode.h",
        "include/SDL_clipboard.h",
        "include/SDL_config.h",
        "include/SDL_config_android.h",
        "include/SDL_config_iphoneos.h",
        "include/SDL_config_macosx.h",
        "include/SDL_config_minimal.h",
        "include/SDL_config_os2.h",
        "include/SDL_config_pandora.h",
        "include/SDL_config_psp.h",
        "include/SDL_config_windows.h",
        "include/SDL_config_winrt.h",
        "include/SDL_config_wiz.h",
        "include/SDL_copying.h",
        "include/SDL_cpuinfo.h",
        "include/SDL_egl.h",
        "include/SDL_endian.h",
        "include/SDL_error.h",
        "include/SDL_events.h",
        "include/SDL_filesystem.h",
        "include/SDL_gamecontroller.h",
        "include/SDL_gesture.h",
        "include/SDL_haptic.h",
        "include/SDL_hints.h",
        "include/SDL_joystick.h",
        "include/SDL_keyboard.h",
        "include/SDL_keycode.h",
        "include/SDL_loadso.h",
        "include/SDL_locale.h",
        "include/SDL_log.h",
        "include/SDL_main.h",
        "include/SDL_messagebox.h",
        "include/SDL_metal.h",
        "include/SDL_misc.h",
        "include/SDL_mouse.h",
        "include/SDL_mutex.h",
        "include/SDL_name.h",
        "include/SDL_opengl.h",
        "include/SDL_opengl_glext.h",
        "include/SDL_opengles.h",
        "include/SDL_opengles2.h",
        "include/SDL_opengles2_gl2.h",
        "include/SDL_opengles2_gl2ext.h",
        "include/SDL_opengles2_gl2platform.h",
        "include/SDL_opengles2_khrplatform.h",
        "include/SDL_pixels.h",
        "include/SDL_platform.h",
        "include/SDL_power.h",
        "include/SDL_quit.h",
        "include/SDL_rect.h",
        "include/SDL_render.h",
        "include/SDL_revision.h",
        "include/SDL_rwops.h",
        "include/SDL_scancode.h",
        "include/SDL_sensor.h",
        "include/SDL_shape.h",
        "include/SDL_stdinc.h",
        "include/SDL_surface.h",
        "include/SDL_system.h",
        "include/SDL_syswm.h",
        "include/SDL_test.h",
        "include/SDL_test_assert.h",
        "include/SDL_test_common.h",
        "include/SDL_test_compare.h",
        "include/SDL_test_crc32.h",
        "include/SDL_test_font.h",
        "include/SDL_test_fuzzer.h",
        "include/SDL_test_harness.h",
        "include/SDL_test_images.h",
        "include/SDL_test_log.h",
        "include/SDL_test_md5.h",
        "include/SDL_test_memory.h",
        "include/SDL_test_random.h",
        "include/SDL_thread.h",
        "include/SDL_timer.h",
        "include/SDL_touch.h",
        "include/SDL_types.h",
        "include/SDL_version.h",
        "include/SDL_video.h",
        "include/SDL_vulkan.h",
        "include/begin_code.h",
        "include/close_code.h",
    ],
    strip_include_prefix = "include",
    visibility = [
        "//code/renderercommon:__pkg__",
        "//code/sdl:__pkg__",
    ],
    deps = [
        ":sdl_library",
        "//third_party/jpeg",
    ],
)
