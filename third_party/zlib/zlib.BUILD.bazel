# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This Build file was copied from https://github.com/tensorflow/tensorflow/blob/7a99ce11636fb7e0c974d4d9b8b5dbff7f259c87/third_party/zlib.BUILD
#       and is under the Apache 2 license as specified by https://github.com/tensorflow/tensorflow/blob/7a99ce11636fb7e0c974d4d9b8b5dbff7f259c87/LICENSE

package(default_visibility = ["//visibility:public"])

# TODO: Replace zlib with https://github.com/zlib-ng/zlib-ng (as it is faster and "better" maintained?)
# TODO: Replace unzip with https://github.com/zlib-ng/minizip-ng (as it is maintained?)

licenses(["notice"])  # BSD/MIT-like license (for zlib)

cc_library(
    name = "zlib",
    hdrs = ["zlib.h"],
    copts = select({
        "@org_realityforge_q3a//build_defs:windows": [],
        "//conditions:default": [
            "-Wno-shift-negative-value",
            "-DZ_HAVE_UNISTD_H",
        ],
    }),
    includes = ["."],
)

cc_library(
    name = "zlib_impl",
    srcs = [
        "adler32.c",
        "compress.c",
        "crc32.c",
        "crc32.h",
        "deflate.c",
        "deflate.h",
        "gzclose.c",
        "gzguts.h",
        "gzlib.c",
        "gzread.c",
        "gzwrite.c",
        "infback.c",
        "inffast.c",
        "inffast.h",
        "inffixed.h",
        "inflate.c",
        "inflate.h",
        "inftrees.c",
        "inftrees.h",
        "trees.c",
        "trees.h",
        "uncompr.c",
        "zconf.h",
        "zutil.c",
        "zutil.h",
    ],
    copts = select({
        "@org_realityforge_q3a//build_defs:windows": [],
        "//conditions:default": [
            "-Wno-shift-negative-value",
            "-DZ_HAVE_UNISTD_H",
        ],
    }),
    includes = ["."],
    deps = [":zlib"],
)

genrule(
    name = "unzip_c_generator",
    srcs = ["contrib/minizip/unzip.c"],
    outs = ["generated/contrib/minizip/unzip.c"],
    cmd = """
    echo \"#include \\\"qcommon.h\\\"\n\" > $@ &&
    echo \"#define ALLOC(size) (Z_Malloc(size))\n\" >> $@ &&
    echo \"#define TRYFREE(p) {if (p) Z_Free(p);}\n\" >> $@ &&
    cat $(execpath :contrib/minizip/unzip.c) >> $@
    """,
    visibility = ["//visibility:private"],
)

cc_library(
    name = "unzip_impl",
    srcs = [
        "contrib/minizip/ioapi.c",
        ":unzip_c_generator",
    ],
    deps = [
        ":unzip",
        ":zlib",
        "@org_realityforge_q3a//code/qcommon",
    ],
)

cc_library(
    name = "unzip",
    hdrs = [
        "contrib/minizip/ioapi.h",
        "contrib/minizip/unzip.h",
    ],
    includes = ["contrib/minizip"],
    deps = [":zlib"],
)
